(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



PPSGitHubCheck::usage=
	"Checks the results coming out of GitHub";


Begin["`Private`"];


(* ::Subsubsection::Closed:: *)
(*Common Messages*)



PublicPacletServer::noauth=
	"Public paclet server requires authentication with GitHub";
PublicPacletServer::nohub=
	"Public paclet server can't connect to github.com. \
Are you connected to the internet?";
PublicPacletServer::badreq=
	"Request to GitHub failed with message: \"``\"
Contact b3m2a1@gmail.com for details.";
PublicPacletServer::badcon=
	"Request couldn't be completed due to a conflict with message: \"``\"
Contact b3m2a1@gmail.com for details.";
PublicPacletServer::badend=
	"Request couldn't be completed due to missing endpoint with message: \"``\"
Contact b3m2a1@gmail.com for details.";
PublicPacletServer::badhub=
	"Internal error, request to GitHub failed.
Contact b3m2a1@gmail.com for details.";


(* ::Subsubsection::Closed:: *)
(*PPSGitHubCheck*)



PPSGitHubCheck[res_]:=
	Which[
		Head[res]===GitHub,
			Message[PublicPacletServer::badhub];
			$Failed,
		!AssociationQ@res,
			res;
			Message[PublicPacletServer::nohub];
			$Failed,
		res["StatusCode"]===401,
			Message[PublicPacletServer::noauth];
			$Failed,
		res["StatusCode"]===404,
			Message[PublicPacletServer::badend, res["Message"]];
			$Failed,
		res["StatusCode"]===409,
			Message[PublicPacletServer::badcon, res["Message"]];
			$Failed,
		res["StatusCode"]>400,
			Message[PublicPacletServer::badreq, StringReplace[res["Message"], "\n"->" "]];
			$Failed,
		True,
			res["Content"]
		]
			


End[];



